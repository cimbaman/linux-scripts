#!/bin/bash


# Adding file for colors
if [ -f ~/.bash_colors ]; then
    . ~/.bash_colors
fi

# determine git branch name
function parse_git_branch(){
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Determine the branch/state information for this git repository.
function set_git_branch() {
  # Get the name of the branch.
  branch=$(parse_git_branch)
  BRANCH="${branch}"
}

# Determine if there are any jobs runningin the background
function set_job_running () {
  if [ $(jobs | wc -l) -eq 0 ] ;
  then  JOBNUM=""
else  JOBNUM=" [\j] "
  fi
}


# Set the full bash prompt.
function set_bash_prompt () {

  # Set the BRANCH variable.
  set_git_branch
  # Set the JOBNUM variable.
  set_job_running


  if [ "$color_prompt" = yes ]; then
    # Bash prompt that shows user:[directory] [bg] (git) with color
    PS1="${debian_chroot:+($debian_chroot)}${bldgrn}\u${txtrst}:${bldblu}[\w]${txtrst}${bldred}${JOBNUM}${txtrst}${txtpur}${BRANCH}${txtrst} \$ "
  else
    # Bash prompt that shows user:[directory] [bg] (git) without color
    PS1="${debian_chroot:+($debian_chroot)}\u:[\w] ${JOBNUM}${BRANCH} \$ "
  fi
  unset color_prompt force_color_prompt

  # Set terminal name with time
  case "$TERM" in
  xterm*|rxvt*)
      PS1="\[\e]0;${debian_chroot:+($debian_chroot)}[\t] \u@\h: \w\a\]$PS1"
      ;;
  *)
      ;;
  esac
}

# Shorten directory to only two
PROMPT_DIRTRIM=2
# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=set_bash_prompt
